{
  "openapi": "3.0.2",
  "info": {
    "title": "Authentication",
    "description": "These are the specifications for the user authentication and other endpoints",
    "version": "1.0",
    "termsOfService": "https://hng.tech/terms",
    "contact": {
      "name": "Contact HNG",
      "url": "https://hng.tech/contact-us"
    },
    "license": {
      "name": "HNG License",
      "url": "https://licenses.example.com"
    }
  },
  "servers": [
    {
      "url": "https://api.server.test/v1"
    },
    {
      "url": "http://localhost:8080/v1",
      "description": "Local server"
    },
    {
      "url": "http://dev.example.com/v1",
      "description": "Dev server"
    },
    {
      "url": "http://prod.example.com/v1",
      "description": "Prod server"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "register user",
        "description": "Creates a new user",
        "operationId": "registerUser",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "User schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userRegistration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid parameter types!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login to application",
        "description": "Verify and authenticate user credentials",
        "operationId": "loginUser",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "Login request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "banana_user156"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "format": "password",
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
                    "example": "Hiihih12@"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid Credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials. No user with that email or password exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "get": {
        "summary": "Retrieve messages",
        "description": "Get messages sent to user",
        "operationId": "getMessages",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved messages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. No access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noAuth"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "summary": "Retrieve dashboard information",
        "description": "Get summary of widget information and place in dashboard",
        "operationId": "getDashBoard",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "Retrieved dashboard information successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "object",
                      "example": {
                        "notifications_count": 8,
                        "latest_notification": "text",
                        "email_notification_status": false
                      }
                    },
                    "user": {
                      "type": "object",
                      "example": {
                        "userName": "user162",
                        "blog_posts_count": 4
                      }
                    },
                    "earnings": {
                      "type": "object",
                      "example": {
                        "earnings_ammount": 15000,
                        "profit": 12000
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noAuth"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/earnings": {
      "get": {
        "summary": "Retrieve user earnings",
        "description": "Gut full user earnings from dashboard",
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "year",
            "required": false,
            "example": 2024,
            "description": "Get earning records by specified year"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user earnings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "earnings": {
                        "type": "object",
                        "example": {
                          "earnings_ammount": 15000,
                          "latest_payment_date": "15-09-2023",
                          "credit_score": 30,
                          "ads_cost": 3000,
                          "profit": 12000,
                          "year": 2024
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid year",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Year must be an integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User must be logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noAuth"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/user": {
      "get": {
        "summary": "Retrieve user information from dashboard",
        "description": "Get full user information from dashboard",
        "responses": {
          "200": {
            "description": "Successfully retrieved user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "userName": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "number",
                      "format": "date"
                    },
                    "organisations_list": {
                      "type": "array"
                    },
                    "blog_posts": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to get user information"
          },
          "401": {
            "description": "User must be logged in first",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noAuth"
                }
              }
            }
          }
        }
      }
    },
    "/invite/{userId}": {
      "get": {
        "summary": "Invite user",
        "description": "Personal invite link",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "get personal like through the user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated links"
          },
          "500": {
            "description": "Internal server error. Could not generate link"
          }
        }
      }
    },
    "/home": {
      "get": {
        "summary": "Get home page",
        "description": "Render home page data",
        "responses": {
          "200": {
            "description": "Successfully loaded home page",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "<body></body>"
                }
              }
            }
          },
          "404": {
            "description": "Could not get page"
          }
        }
      }
    },
    "/about": {
      "get": {
        "summary": "Get about page",
        "description": "Render about page data",
        "responses": {
          "200": {
            "description": "Successfully loaded about page",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "<body></body>"
                }
              }
            }
          },
          "404": {
            "description": "Could not get page"
          }
        }
      }
    },
    "/privacy": {
      "get": {
        "summary": "Get privacy policy page",
        "description": "Render privacy policy page data",
        "responses": {
          "200": {
            "description": "Successfully loaded privacy policy page",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "<body></body>"
                }
              }
            }
          },
          "404": {
            "description": "Could not get page"
          }
        }
      }
    },
    "/subscribe": {
      "post": {
        "summary": "Squeeze/Marketing page",
        "description": "Endpoint to get user info after marketing",
        "responses": {
          "200": {
            "description": "Successfully registered for newsletter"
          },
          "307": {
            "description": "redirect to homepage",
            "headers": {
              "Location": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "/home"
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Server timeout"
          }
        }
      }
    },
    "/chartdata": {
      "get": {
        "summary": "Get chart page",
        "description": "Endpoint to retrieve chart page data",
        "responses": {
          "200": {
            "description": "Retrieved chart page data successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "views": {
                      "type": "integer",
                      "example": 400
                    },
                    "bounce_rate": {
                      "type": "number"
                    },
                    "heat_maps": {
                      "type": "array",
                      "description": "User interactions along page elements"
                    },
                    "top_countries": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "could not get data"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a list of all registered users",
        "description": "Endpoint to get a list of all registered users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of user to show by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 20,
              "minimum": 10,
              "type": "integer",
              "example": 15
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of user to skip",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 20,
              "minimum": 10,
              "type": "integer",
              "example": 15
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "To filter users by name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "John"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_users_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "422": {
            "description": "Validation error for form fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_422"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a single user by ID",
        "description": "Endpoint to get a single user's details",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "This is the id of the user to be searched for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user",
        "description": "Endpoint to get the current user matching the Id to update",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "This is the id of the user to be searched for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "This is the id of the user to be searched for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "422": {
            "description": "Validation error for form fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_422"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api/organisations": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Get a list of organisations",
        "description": "Obtain all organisations for the current user. This endpoint can also be used to get all organisations in the database, only if the user role is that of an admin or superadmin.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of organisations returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 20,
              "minimum": 10,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of organisations to skip",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 20,
              "minimum": 10,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of organisations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Organisations"
        ],
        "summary": "Add organisation",
        "description": "Add a new Organisation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_organisations_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully created organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "422": {
            "description": "Validation error for form fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_422"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api//organisations/{orgId}": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Get a single organisation details",
        "description": "Obtain a single organisation. This endpoint is role based. So if it is a regular user, they have access to only organisations they belong to, and if it is an admin or superadmin, they have access to all organisations.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "The id of the organisation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Organisations"
        ],
        "summary": "Update an organisation",
        "description": "Update the details of an organisation. This is also protected just like in the get request above.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "The id of the organisation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisations_orgId_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "422": {
            "description": "Validation error for form fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_422"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Organisations"
        ],
        "summary": "Delete an organisation",
        "description": "Delete an organisation from the database. This ia also a protected route.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "The id of the organisation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api/payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create a payment",
        "description": "Endpoint for payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "422": {
            "description": "Validation error for form fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_422"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api/payments/{paymentId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get a single payment details",
        "description": "Obtain the details of a single payment. This is role based in that, a regular user can only get the details of the payments they made, and an admin or superadmin user can get the details of payments with the Id.",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details fetched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get setting",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update settings",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user123"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403": {
            "description": "Permission error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api/profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get profile settings",
        "responses": {
          "200": {
            "description": "Profile settings details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileSettings"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Update profile settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "secretKeyAuth": []
          }
        ]
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notifications",
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notificationId}": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Mark notification as read",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/api/blogs": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get list of blogs",
        "responses": {
          "200": {
            "description": "List of blogs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Blog"
        ],
        "summary": "Create a new blog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Blog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/api/blogs/{blogId}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get blog details",
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Blog"
        ],
        "summary": "Update a blog by ID",
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Blog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Blog"
        ],
        "summary": "Delete a blog by ID",
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/waitlist": {
      "post": {
        "tags": [
          "Waitlist"
        ],
        "summary": "Create a new waitlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Waitlist"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Sends a message to support",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Waitlist": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "userRegistration": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "maxLength": 50
          },
          "lastName": {
            "type": "string",
            "maxLength": 50
          },
          "userName": {
            "type": "string",
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "format": "password",
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"
          }
        }
      },
      "successResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "[message]"
          },
          "data": {
            "type": "object",
            "example": {
              "[key]": "[value]"
            }
          }
        }
      },
      "noAuth": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": "false"
          },
          "message": {
            "type": "string",
            "example": "User must have authorization. Login"
          }
        }
      },
      "message": {
        "type": "array",
        "properties": {
          "user_relationship_id": {
            "type": "string"
          },
          "messages": {
            "type": "object",
            "properties": {
              "message_id": {
                "type": "string"
              },
              "sent": {
                "type": "number",
                "format": "date"
              },
              "received": {
                "type": "number",
                "format": "date"
              },
              "message_content": {
                "type": "string"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "country_code": {
            "type": "integer"
          },
          "is_active": {
            "type": "boolean"
          },
          "is_verified": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_login-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Model for user object"
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "org_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Model for Organisation object"
      },
      "CreatePayment": {
        "required": [
          "amount",
          "currency",
          "payment_method",
          "provider",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user_Id": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "currency": {
            "type": "string"
          },
          "payment_method": {
            "type": "string"
          },
          "transaction_id": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Settings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "settings": {
            "type": "object"
          }
        }
      },
      "ProfileSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "profile": {
            "type": "object"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Blog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "authorId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "inline_response_401": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      },
      "api_users_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          }
        ]
      },
      "inline_response_422": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_422_detail"
            }
          }
        }
      },
      "api_organisations_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the organisation"
          },
          "description": {
            "type": "string",
            "description": "The details of the organisation"
          }
        }
      },
      "organisations_orgId_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the organisation"
          },
          "description": {
            "type": "string",
            "description": "The details of the organisation"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "inline_response_422_detail": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "SuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_200"
            }
          }
        }
      },
      "DeletedResponse": {
        "description": "Successful deletion",
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_401"
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "Permission error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_401"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Bad request error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_401"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_401"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error for form fields",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_422"
            }
          }
        }
      },
      "ServerError": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_401"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "secretKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}

